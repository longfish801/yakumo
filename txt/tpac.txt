
【＃タイトル】TPAC記法

■概要

　TPAC記法は、改行を含む長めの文章や、親子関係を簡単に記述するための記法です。
　名称は、長めの文章(Text)と親子関係(Parent And Child)に由来しています。

　以下のとおり、既存の記法では難しいことから独自に作成した記法です。

・XMLは、長いテキストや階層的なデータ構造を実現できますが、表現が冗長です。
・JSONや YAMLは、階層的なデータ構造を実現できますが、長いテキストの記述には向いていません。
・Groovy DSLは、文法的な誤りを含む Closureを記述できません。

■サンプル

　以下にTPAC文書のサンプルを示します。
　ファイル【リンク：tpacSample/sample.tpac】として保存したとします。

----- コード -----
#! dec ルート
## parent1 親名１

## parent2 親名２
#-attr1 属性値１
#-attr2

サンプルテキストあ
サンプルテキストい
サンプルテキストう

# child1 子名１
サンプルテキストか
サンプルテキストき
サンプルテキストく

# child2 子名２
#-attr3 属性値３
----- コード -----

　上記の TPAC文書を、以下の XMLに変換できます。
　ファイル【リンク：tpacSample/sample.xml】として保存したとします。

----- コード -----
<?xml version="1.0" encoding="UTF-8"?>
<dec name="ルート">
  <parent1 name="親名１">
</parent1>
  <parent2 name="親名２" attr1="属性値１" attr2="">
サンプルテキストあ
サンプルテキストい
サンプルテキストう


    <child1 name="子名１">サンプルテキストか
サンプルテキストき
サンプルテキストく

</child1>
    <child2 name="子名２" attr3="属性値３" />
  </parent2>
</dec>
----- コード -----

　クラス【リンク：Tpac：/tpac/groovydoc/io/github/longfish801/yakumo/tpac/Tpac.html】を利用して、XMLへの変換などができます。

　以下をファイル【リンク：tpacSample/sample.groovy】として保存したとします。
　groovyコマンドで実行すると、assertに成功します。

----- コード -----
@GrabResolver(name = 'longfish801 github repositry', root = 'https://longfish801.github.io/maven/')
@Grab('io.github.longfish801:yakumo:0.1.00')
@GrabExclude('org.codehaus.groovy:groovy-all')

import io.github.longfish801.yakumo.tpac.Tpac;
import io.github.longfish801.yakumo.parser.ParseException;

Tpac tpac = null;
try {
	tpac = new Tpac(new File('sample.tpac'));
	assert tpac.toXml() == new File('sample.xml').getText('UTF-8');
} catch (ParseException exc){
	println "文法誤りがあるため TPAC文書を解析できません。exc=${exc}";
}
----- コード -----

■全般

　必ず終端に改行コードが必要です。
　ファイルに記述する場合、文字コードは UTF-8を使用してください。

　タグ名、名前、属性名に改行コード、半角スペース、半角シャープは使用できません。
　属性値に改行コードは使用できません。
　タグ名、属性名は空文字を許容しません。名前、属性値は空文字を許容します。

■使用できる文字

　タグ名は必須です。
　改行コード、半角スペース、半角シャープを使用できません。

　名前は省略可の場合があります。
　改行コード、半角スペース、半角シャープを使用できません。

　属性名は必須です。
　改行コード、半角スペース、半角シャープを使用できません。

　属性値は省略可です。
　改行コードを使用できません。

　テキストは省略可です。
　すべての文字を使用できます。複数行記述することもできます。
　先頭を半角シャープ（#）以外の文字で始める必要があります。

■宣言

　先頭行に宣言をひとつだけ持ちます。
　半角シャープ＋半角エクスクラメーションマーク（#!）を行の先頭に付加します。
　タグ名と名前を半角スペース区切りで記述します。
　タグ名の前にも半角スペースが必要です。
　タグ名は必須、名前は省略可です。

■親子要素

　親要素、子要素を複数指定できます。

・親要素は半角シャープふたつ（##）を行の先頭に付加します。
・子要素は半角シャープ（#）を行の先頭に付加します。

　子要素を定義するときは、その親要素が必要です。
　親要素の後に記述した子要素は、その親要素に属するとみなします。

　親子要素にはタグ名と名前を半角スペース区切りで記述します。
　タグ名の前にも半角スペースが必要です。

・タグ名は必須、重複可です。
・名前は、ひとつのみ省略できます。
　ひとつのみとは、親要素でひとつのみか、同じ親に属する子にひとつのみです。
・親同士でタグと名前の組合せの重複は不可です。
・同じ親に属する子同士で、タグと名前の組合せの重複は不可です。

■属性

　宣言要素、親子要素には属性を複数持たせることができます。
　各要素の後続行に、先頭が半角シャープ＋半角ハイフン（#-）で始まる行を記述します。
　各要素と属性の間、属性の行同士の間に空行は含めないでください。

　属性名と属性値を半角スペース区切りで記述します。
　属性名の前に半角スペースは不要です。

　属性名は必須です。同じ親あるいは子に属する属性名は重複不可です。
　属性値は省略可です。

■テキスト

　宣言要素、親子要素はテキストを最低ひとつ持たせることができます。
　テキストの各行は、先頭を半角シャープ（#）以外の文字で始める必要があります。

　テキストは省略可です。

以上
