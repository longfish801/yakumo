/*
 * build.gradle
 *
 * Copyright (C) io.github.longfish801 All Rights Reserved.
 */

plugins {
	id 'com.github.monosoul.markdown.page.generator' version '2.3.1.1'
	id 'groovy'
	id 'jacoco'
	id 'java-library'
	id 'maven-publish'
}

defaultTasks 'fix'
group = 'io.github.longfish801'
version = '1.1.00'

// mavenローカルリポジトリへのパスが設定されているか確認します
if (System.properties.mavenPath == null || System.properties.mavenPath.empty){
	throw new Exception('Environment variables mavenPath is required.')
}
String mavenPjPath = [System.properties.mavenPath, project.name].join(File.separator)

repositories {
	mavenCentral()
	maven { url 'https://longfish801.github.io/maven/' }
}

dependencies {
	api 'io.github.longfish801:bltxt:1.1.00'
	api 'io.github.longfish801:clmap:1.1.00'
	api 'io.github.longfish801:gonfig:1.1.00'
	api 'io.github.longfish801:switem:1.1.00'
	implementation 'commons-io:commons-io:2.11.0'
	implementation 'org.apache.commons:commons-lang3:3.12.0'
	implementation 'org.apache.commons:commons-text:1.9'
	implementation 'org.codehaus.groovy:groovy-all:3.0.9'
	implementation 'org.codehaus.gpars:gpars:1.2.1'
	implementation 'org.slf4j:slf4j-api:1.7.36'
	testImplementation 'ch.qos.logback:logback-classic:1.2.11'
	testImplementation 'io.github.longfish801:tpac:1.1.00'
	testImplementation('org.spockframework:spock-core:2.1-groovy-3.0') {
		exclude group: 'org.codehaus.groovy'
	}
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

groovydoc {
	overviewText = resources.text.fromFile('src/main/resources/overview.html')
	[
		'http://docs.oracle.com/javase/8/docs/api/' : 'java.,javax.,org.xml.',
		'https://docs.groovy-lang.org/3.0.9/html/gapi/' : 'groovy.,org.codehaus.groovy.'
	].each { link(it.key, it.value); }
}

generateHtml {
	inputDirectory = file('src/markdown')
	headerHtmlFile = file('src/markdown/template/header.html')
	footerHtmlFile = file('src/markdown/template/footer.html')
	pegdownExtensions = 'TOC,ANCHORLINKS,EXTANCHORLINKS,HARDWRAPS,FENCED_CODE_BLOCKS,DEFINITIONS,TABLES'
}

publishing {
	publications {
		library(MavenPublication) { from components.java }
	}
	repositories {
		maven { url System.properties.mavenPath }
    }
}

// サンプルを実行します
tasks.register('execSamples', JavaExec) {
	dependsOn 'classes'
	mainClass = 'Sample'
	classpath = sourceSets.test.runtimeClasspath
}

// フィックスします
tasks.register('fix'){
	dependsOn 'clean', 'test', 'execSamples', 'groovydoc', 'generateHtml'
}

// ドキュメントをローカルのmavenリポジトリに出力します
tasks.register('deleteDoc', Delete){
	delete mavenPjPath
}
tasks.register('copyHtml', Copy){
	dependsOn 'deleteDoc', 'generateHtml'
	from 'build/html'
	into mavenPjPath
}
tasks.register('copyGroovydoc', Copy){
	dependsOn 'copyHtml', 'groovydoc'
	from 'build/docs/groovydoc'
	into "${[mavenPjPath, 'groovydoc'].join(File.separator)}"
}
tasks.register('publishDoc'){
	dependsOn 'copyGroovydoc'
}

// リリースします
tasks.register('release'){
	dependsOn 'publish', 'publishDoc'
}
